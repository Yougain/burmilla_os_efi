# bash source


partNum2Dev(){
	declare -A to_mount_cand
	local to_mount
	local src="$1"
	if [[ "$src" =~ ^[0-9]*$ ]];then
		if [ -z "$EFI_UUID_ARG" ];then
			if grep efi=UUID= /proc/cmdline > /dev/null;then
				local tmp_uuid_arg="`cat /proc/cmdline|sed -r 's/^.*[[:space:]]efi=UUID=((\\\\|)['"'"'"]|)([0-9a-fA-F-]+)\1.*$/\3/g'`"
				if [[ "$tmp_uuid_arg" =~ ^[0-9a-fA-F-]+$ ]];then
					EFI_UUID_ARG=$tmp_uuid_arg
				fi
			elif grep ref_boot_uuid= /proc/cmdline > /dev/null;then
				local tmp_boot_uuid_arg="`cat /proc/cmdline|sed -r 's/^.*[[:space:]]ref_boot_uuid=((\\\\|)['"'"'"]|)([0-9a-fA-F-]+)\1.*$/\3/g'`"
				local boot_part=`blkid2 UUID=$tmp_boot_uuid_arg`
				if [ -n "$boot_part" ];then
					echo "${boot_part:0: -1}"$src
					return 0
				fi
			fi
		fi
		if [ -n "$EFI_UUID_ARG" ];then
			local boot_drive=`readlink -f /dev/disk/by-uuid/$EFI_UUID_ARG|sed -r 's/^\/dev\/([a-z]+)[0-9]+$/\1/g'`
			if [ -b "/dev/$boot_drive" ];then
				if [ -b "/dev/$boot_drive"$src ];then
					echo "/dev/$boot_drive"$src
				else
					warn "'/dev/$boot_drive"$src"' is not a block device."
				fi
			else
				warn "'/dev/$boot_drive' is not a block device."
			fi
		fi
	else
		echo "$src"
	fi
}

