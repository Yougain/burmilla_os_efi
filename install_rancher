#!/bin/bash

if [ -z "$1" ];then
	echo -e "\033[31mError: Missing argument (IP address for installation)\033[m"
	exit 1
fi

KEY=`cat .ssh/id_ed25519.pub`
echo $KEY
if [ -z "$KEY" ];then
	echo -e "\033[31mError: Cannot find public key in .ssh/id_ed25519.pub. exit.\033[m"
	exit 1
fi
if ! ssh -o "PasswordAuthentication no" -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -l rancher $1 echo; then
	expect -c "
set timeout 3
spawn ssh -o \"StrictHostKeyChecking no\" -o \"UserKnownHostsFile /dev/null\" -l rancher $1
expect \"assword:\"
send \"rancher\n\"
expect \"rancher ~]$ \"
send \"mkdir .ssh\n\"
expect \"rancher ~]$ \"
send \"chmod 700 .ssh\n\"
expect \"rancher ~]$ \"
send \"echo $KEY > .ssh/authorized_keys\n\"
expect \"rancher ~]$ \"
send \"exit\"
"
fi

if ! ssh -o "PasswordAuthentication no" -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -l rancher $1 echo; then
	echo -e "\033[31mError: Cannot logon as user, 'rancher' by password, 'rancher'\033[m"
	echo "Please enter following commands on console"
	echo -e "\033[36msudo passwd rancher
rancher
rancher\033[m"
	exit 1
fi

DISK_SIZE=`ssh -o "PasswordAuthentication no" -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -l rancher -t 198.19.24.196 sudo bash -c "'"sudo fdisk -l /dev/sda \|grep \"Disk /dev/sda\"\|awk \"{print $\"\"5}\""'"|grep -v boundary`
MEM_SIZE=`ssh -o "PasswordAuthentication no" -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -l rancher -t 198.19.24.196 bash -c "'"cat /proc/meminfo\|grep MemTotal\|awk \"{print $\"\"2}\""'"`
DISK_SIZE=${DISK_SIZE%$'\r'}
MEM_SIZE=${MEM_SIZE%$'\r'}


if [ "$DISK_SIZE" -ge 4398046511104 ];then
	ROOT_SIZE="+1280G"
	SWAP_PART_SIZE="+64G"
	SWAP_PAGE_SIZE_OPT="-p $((MEM_SIZE*1024))"
	GDISK_FINISH="n
6


fd00
w
y
"
	FOR_DATA_PART="mdadm --create /dev/md127 --level=1 --metadata=1.2 --raid-devices=2 /dev/sda6 missing <<END
y
END
mkfs.ext4 -L DATA /dev/md127 <<END
y
END
"
else
	ROOT_SIZE=""
	SWAP_PART_SIZE="+$MEM_SIZE""K"
	SWAP_PAGE_SIZE_OPT=""
	GDISK_FINISH="w
y"
	FOR_DATA_PART=""
fi

ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -l rancher $1 sudo ros console switch ubuntu -f
sleep 5
ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -l rancher $1 bash -c "cat - > __install_rancher" <<FINAL
#!/bin/bash
apt-get update; apt-get install -y gdisk lvm2 dosfstools mdadm
dd if=/dev/zero of=/dev/sda bs=1G count=1
gdisk /dev/sda <<'EOF'
2
x
l
1
m
n
1

2047
ef02
x
l
2048
m
n
2

+256M
ef00
n
3

$SWAP_PART_SIZE
8200
n
4

+2G
fd00
n
5

$ROOT_SIZE
fd00
$GDISK_FINISH
EOF

mdadm --create /dev/md125 --level=1 --metadata=1.0 --raid-devices=2 /dev/sda4 missing <<END
y
END
mdadm --create /dev/md126 --level=1 --metadata=1.2 --raid-devices=2 /dev/sda5 missing <<END
y
END

mkfs.ext4 -L RANCHER_BOOT /dev/md125 <<END
y
END
mkswap -L RANCHER_SWAP $SWAP_PAGE_SIZE_OPT /dev/sda3 <<END
y
END
mkfs.vfat -F32 -n EFI /dev/sda2 << END
y
END
$FOR_DATA_PART
system-docker exec -it udev sudo bash -c "vgcreate vg0 /dev/md126;lvcreate -n lv0 --size=1T vg0;vgchange -ay vg0"
echo -n "mounts:
- - /dev/md125
  - /boot
  - ext4
  - \"\"
- - /dev/sda2
  - /boot/efi
  - vfat
  - \"\"
" > cloud-config.yml
echo -n -e "#cloud-config\nssh_authorized_keys:\n - " >> cloud-config.yml
echo "$KEY" >> cloud-config.yml
ros install -t gptsyslinux -c cloud-config.yml -a rancher.state.mdadm_scan -a rancher.state.lvm_scan -d /dev/sda -p /dev/dm-0 <<END
y
n
END
mount /dev/dm-0 /opt
mount /dev/md125 /mnt
cp -ra /opt/boot/* /mnt
mkdir /mnt/efi
umount /opt
umount /mnt
mkdir /mnt/efipart && mount /dev/sda2 /mnt/efipart
mkdir /mnt/installer && mount /dev/sdb1 /mnt/installer
cp -r /mnt/installer/EFI /mnt/efipart
cat - > /mnt/efipart/EFI/BOOT/grub.cfg <<END
set timeout=1
set gfxmode=1280x1024x16
set gfxpayload=keep
menuentry "Rancher from GPT" {
	set gfxmode=1280x1024
	set gfxpayload=keep
    search --no-floppy --set=root --label RANCHER_BOOT
    linux    /vmlinuz-4.14.138-rancher nomodeset vga=775 video=1280x1024 printk.devkmsg=on rancher.state.mdadm_scan rancher.state.lvm_scan rancher.state.dev=LABEL=RANCHER_STATE rancher.state.wait panic=10 console=tty1 console=ttyS0
    initrd    /initrd-v1.5.8
}
END
reboot
FINAL
ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -l rancher $1 chmod +x __install_rancher
ssh -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -t -l rancher $1 sudo ./__install_rancher
