#!/bin/bash

#if [ -n "$1" ];then
#    ssh -t $1 'if [ -f /bin/dnf -o -f /usr/bin/dnf ];then IST="dnf"; else if [ -f /bin/yum -o -f /usr/bin/yum ];then IST="yum"; else if [ -f /usr/apt-get -o -f /usr/bin/apt-get ];then IST="apt-get"; else echo "Error: package installer not found."; exit 1; fi; fi; fi; if [ ! -f /bin/git ];then sudo $IST -y update; sudo $IST -y install git git-extras; fi; if [ ! -f /bin/which -a ! -f /usr/bin/which ];then sudo \$IST -y install which; fi; if [ -d "./burmilla_os_efi" ]; then git-force-clone  https://github.com/Yougain/burmilla_os_efi.git ~/burmilla_os_efi; else git clone https://github.com/Yougain/burmilla_os_efi.git; fi; ./burmilla_os_efi/'${0##*/}'; exit $?'
#    mkdir -p ~/burmilla_os_iso/
#    scp $1:burmilla_os_iso/'*.iso' ~/burmilla_os_iso/
#    exit $?
#fi

sudo apt-get install -y make patch apt-utils


if ! /usr/lib/docker/cli-plugins/docker-buildx 2> /dev/null; then
	TAG=v`wget -q https://github.com/docker/buildx/releases/latest -O - | grep Welcome | head -1 | grep -o -e '[0-9][^ "]*' | head -1`
	sudo mkdir -p /usr/lib/docker/cli-plugins
	sudo wget https://github.com/docker/buildx/releases/download/$TAG/buildx-$TAG.linux-amd64 -O /usr/lib/docker/cli-plugins/docker-buildx
	sudo chmod +x /usr/lib/docker/cli-plugins/docker-buildx
	docker buildx install
	#git-force-clone https://github.com/docker/buildx.git ~/buildx
	#sudo apt-get install -y make
	#cd ~/buildx
	#make install
	#sudo mv -f $HOME/.docker/cli-plugins/docker-buildx /usr/lib/docker/cli-plugins/
	cd ~
fi


if [ -n "$1" ];then
	wget https://github.com/burmilla/os/releases -O /tmp/burmilla-releases
	if [ ! -e /tmp/burmilla-releases ];then
		echo "cannot download https://github.com/burmilla/os/releases" >&2
		exit 1
	fi
	releases=(`egrep -o "/burmilla/os/tree/v[^\"]+" /tmp/burmilla-releases | uniq`)
	commits=(`egrep -o "/os/commit/[0-9a-f]+" /tmp/burmilla-releases | uniq`)
	hit=
	i=0
	for release in ${releases[@]}; do
		if [ "${release##*/}" = "$1" ];then
			hit=1
			break
		fi
		((++i))
	done
	if [ -z "$hit" ];then
		echo "cannot find $1 in burmilla releases" <&2
		exit 1
	fi
	sudo rm -rf ~/os
	git-force-clone https://github.com/burmilla/os.git ~/os
	cp -a ~/os/vendor/golang.org/x/sys/unix ~/unix
	pushd ~/os
	commit=${commits[$i]}
	echo git checkout ${commit##*/}
	git checkout ${commit##*/}
	if ! grep SetReportCaller ~/os/vendor/github.com -r > /dev/null; then
		NoSetReportCaller=1
	fi
#		rm -rf ~/os/vendor/github.com/Sirupsen/logrus
#		git-force-clone https://github.com/sirupsen/logrus ~/os/vendor/github.com/Sirupsen/logrus
#		for f in `find ~/os/vendor/github.com/Sirupsen/logrus -name '*.go'`; do
#			sed -i 's/sirupsen/Sirupsen/g' $f
#			echo $f
#			grep sirupsen $f
#		done
#		rm -rf ~/os/vendor/golang.org/x/sys/unix
#		cp -af ~/unix ~/os/vendor/golang.org/x/sys
#	fi
else
	sudo rm -rf ~/os
	git-force-clone https://github.com/burmilla/os.git ~/os
	pushd ~/os
fi

#rm ~/v2.0.0.tar.gz
#wget https://github.com/burmilla/os/archive/refs/tags/v2.0.0.tar.gz -O ~/v2.0.0.tar.gz
#cd ~
#tar zxf v2.0.0.tar.gz
#rm -rf os
#mv os-2.0.0 os

PVER=`cat ~/burmilla_os_efi/version`
PVER=`echo $PVER|awk '{print $1}'`
sed "s/__PVER__/$PVER/" ~/burmilla_os_efi/mountOpt.patch > ~/burmilla_os_efi/mountOpt.patch.$PVER
patch -p1 < ~/burmilla_os_efi/mountOpt.patch.$PVER
if [ -n "$NoSetReportCaller" ];then
	sed -i '/SetReportCaller/d' ~/os/pkg/log/log.go
fi
sudo make
mkdir -p ~/burmilla_os_iso
OS_V=`grep -o -e 'VERSION=.*' ~/os/build/initrd/usr/share/ros/os-release`
OS_VER=${OS_V#VERSION=*}
cp ~/os/dist/artifacts/burmillaos.iso ~/burmilla_os_iso/burmillaos-$OS_VER.iso
if [ -e ~/os/dist/artifacts/burmillaos.iso -a -e ~/burmilla_os_iso/burmillaos-$OS_VER.iso ];then
	popd
	exit 0
else
	popd
	exit 1
fi

