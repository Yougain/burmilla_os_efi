# bash source


function find(){
	/usr/bin/find $@ 2> >(egrep -v '/proc.*: Invalid argument')
}


function sfind(){
	system-docker exec udev find $@ 2> >(egrep -v '/proc.*: Invalid argument')
}


function create_initrd_mod(){
	if [ -z "$INITRD_FILE" ];then
		die 'missing $INITRD_FILE'
	fi
	tmpd=`pwd`
	if [ -d /installing/boot_dev/initrd ];then
		for i in `ls /installing/boot_dev/initrd`;do
			umount /installing/boot_dev/initrd/$i
		done
	fi
	rm -rf /installing/boot_dev/initrd
	mkdir -p /installing/boot_dev
	mount $TARGET_DEV4 /installing/boot_dev
	mkdir -p /installing/boot_dev/initrd
	cd /installing/boot_dev/initrd
	apt-get -y update
	apt-get -y install cpio btrfs-progs strace
	zcat /installing/boot_dev/$INITRD_FILE | cpio -idmv

	ln -s usr/lib lib
	ln -s lib lib64

	function cp_lib(){
		item=$1
		shift
		local l=`sfind / -name $item|head -1`
		local cmd
		if [ -z "$l" ];then
			l=`find / -name $item|head -1`
			if [ -z "$l" ];then
				die cannot find $item docker, udev nor local.
			else
				cmd="cp "
			fi
		else
			cmd="system-docker cp udev:"
		fi
		local d=./usr/lib
		for i in $@; do
			if [ -d "$i" ];then
				echo $cmd$l $i/$d
				$cmd$l $i/$d
			fi
		done
		if [ -L $1/$d/$item ];then
			local f=`readlink $1/$d/$item`
			local e=`dirname $l`
			for i in $@; do
				if [ -d "$i" ];then
					echo $cmd$e/$f $i/$d
					$cmd$e/$f $i/$d
				fi
			done
		fi
	}

	function cp_lib_back(){
		while read item; do
			local l=`find / -name $item|head -1`
			if [ -z "$l" ];then
				die cannot find $item
			fi
			local d=/usr/lib
			system-docker cp $l udev:$d
			if [ -L $l ];then
				local f=`readlink $l`
				local e=`dirname $l`
				system-docker cp $e/$f udev:$d
			fi
		done
	}
	
	function check_cp_udev_out(){
		local i="$1"
		local item="$2"
		local ln
		while read ln; do
			if [ "${ln:0:16}" = "invalid symlink " -a  "${ln##*-> }" = "\"../../bin/busybox\""  ]; then
				ln -s busybox $i/usr/bin/$item
			else
				echo $ln >&2
			fi
		done
	}
	
	function cp_bin(){
		local libs=""
		local i
		local d
		while read item; do
			local l=`sfind / -name $item|grep bin/|head -1`
			local cmd
			if [ -z "$l" ];then
				l=`find / -name $item|grep bin/|head -1`
				if [ -z "$l" ];then
					die cannot find $item in docker, udev nor in local.
				else
					cmd="cp "
				fi
			else
				cmd="system-docker cp udev:"
			fi
			for i in $@; do
				if [ -d "$i" ];then
					d=$i
					echo $cmd$l $i/usr/bin
					$cmd$l $i/usr/bin 2> >(check_cp_udev_out "$i" "$item")
				fi
			done
			if [ -n "$d" ];then
				if [ -L $d/usr/bin/$item ];then
					local lk=`readlink $d/usr/bin/$item`
					if [ "${lk:0:1}" = "/" ];then # absolute
						for i in $@; do
							if [ -d "$i" ];then
								echo $cmd$lk $i/$(dirname $lk)
								mkdir -p $i/$(dirname $lk)
								$cmd$lk $i/$(dirname $lk)
							fi
						done
					else
						for i in $@; do
							if [ -d "$i" ];then
								echo $cmd$(dirname $l)/$lk $i/$(dirname $l)/$lk
								mkdir -p $i/$(dirname $l)/$(dirname $lk)
								$cmd$(dirname $l)/$lk $i/$(dirname $l)/$lk
							fi
						done
					fi
				else
					local ldd_res_nf="`ldd $d/usr/bin/$item|grep 'not found (required'|awk '{print $2}'|sort|uniq`"
					ldd_res="$ldd_res_nf 
	""`ldd $1/usr/bin/$item|grep -v 'not found (required'|awk '{print $item}'`"
					while read f; do
						f=${f##*/}
						f=${f%%:*}
						f=${f%% (*)}
						f=`echo $f|awk '{print$1}'`
						if [ "$f" != "linux-vdso.so.1" ];then
							libs="$f
$libs"
						fi
					done < <(echo "$ldd_res")
				fi
			fi
		done
		for i in `echo "$libs"|sort|uniq`; do
			cp_lib $i $@
		done
	}
	
	
	system-docker cp /usr/bin/find udev:/bin

	cp_lib_back <<"	END"
		libselinux.so.1
		libpcre2-8.so.0
	END

	cp_bin . /installing/state_top/state_root <<"	END"
		bash
		busybox
		grep
		ls
		mount
		mknod
		mkdir
		rmdir
		touch
		sleep
		udevadm
		umount
		chown
		chmod
		btrfs
		btrfsck
		strace
		killall
		readlink
		awk
		sed
		blkid
		udevd
	END
	
	system-docker cp udev:/lib/udev ./lib
	
	do_install blkid2 ./usr/bin
	
	find | cpio -o -H newc  | gzip -c > ../$INITRD_FILE-mod
	cd $tmpd

}

